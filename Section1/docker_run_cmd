What is Image:
	Image is the source file to create a running instance(container) of our environmnet
	It consists for source environment and the startup command which will fire once the container is setup


	Ex: docker run <image name>
	    it will create a running container for this image


  Overriding default command of image:
	if we want to overwrite the startup commands specified in image the we can pass it along with the command
	
	Ex: docker run <image name> <default cmd override>
 
        it a override, so the commands specified inside the image will not execute
	


  Listing all runnning containers:
	
	Ex: docker ps (it gives the list of all running containers)
 
	to get details of all the containers ever created on our machine we use
		Ex: docker ps --all





Breakdown of docker run cmd:
	docker run command is actually the combination of docker creat and docker start
	docker create will create the container and docker start will start it with startup commands of image

	docker run <image name> = docker create <image name> + docker start <container-id>


	in docker strat:
		if we do docker start -a <container-id> then it will show the output of the starting commands on your cli

		if we do only docker start <container-id> it will not show the output on cli

		by default we use docker run <image name> then it uses -a argument at the time of start

Cleaing the unused containers,images,networks etc:
	the command is
	docker system prune


docker logs:
	docker logs <container id>

	if you start docker container without -a and still wants to see the things happened then we can use docker logs


Stopping container:

	stop a container: docker stop <container id>

	kill a container: docker kill <container id>

	when we use docker stop then it uses the termination signal to stop the runnning process inside container but it gives 
	time to process to stop or to do some clean up
	whereas docker kill commands will kill the container right now , not get to do any additional work

docker_exec:
	docker exec -it <container id> <command> 
	it will give us an interactive cli inside that container

	accessing terminal:
		 docker exec -it <container id> sh
		 docker exec -it <container id> bash
		 docker exec -it <container id> /bin/bash


	we can also have iteractive terminal at time of running an image
		docker run -it <image name> sh
